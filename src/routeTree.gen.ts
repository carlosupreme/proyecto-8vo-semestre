/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as MemoriaImport } from './routes/memoria'
import { Route as AjustesImport } from './routes/ajustes'
import { Route as AgendaImport } from './routes/agenda'
import { Route as IndexImport } from './routes/index'
import { Route as ChatsIndexImport } from './routes/chats/index'
import { Route as ChatsChatIdImport } from './routes/chats/$chatId'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const MemoriaRoute = MemoriaImport.update({
  id: '/memoria',
  path: '/memoria',
  getParentRoute: () => rootRoute,
} as any)

const AjustesRoute = AjustesImport.update({
  id: '/ajustes',
  path: '/ajustes',
  getParentRoute: () => rootRoute,
} as any)

const AgendaRoute = AgendaImport.update({
  id: '/agenda',
  path: '/agenda',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ChatsIndexRoute = ChatsIndexImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => rootRoute,
} as any)

const ChatsChatIdRoute = ChatsChatIdImport.update({
  id: '/chats/$chatId',
  path: '/chats/$chatId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/agenda': {
      id: '/agenda'
      path: '/agenda'
      fullPath: '/agenda'
      preLoaderRoute: typeof AgendaImport
      parentRoute: typeof rootRoute
    }
    '/ajustes': {
      id: '/ajustes'
      path: '/ajustes'
      fullPath: '/ajustes'
      preLoaderRoute: typeof AjustesImport
      parentRoute: typeof rootRoute
    }
    '/memoria': {
      id: '/memoria'
      path: '/memoria'
      fullPath: '/memoria'
      preLoaderRoute: typeof MemoriaImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/chats/$chatId': {
      id: '/chats/$chatId'
      path: '/chats/$chatId'
      fullPath: '/chats/$chatId'
      preLoaderRoute: typeof ChatsChatIdImport
      parentRoute: typeof rootRoute
    }
    '/chats/': {
      id: '/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agenda': typeof AgendaRoute
  '/ajustes': typeof AjustesRoute
  '/memoria': typeof MemoriaRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/chats/$chatId': typeof ChatsChatIdRoute
  '/chats': typeof ChatsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/agenda': typeof AgendaRoute
  '/ajustes': typeof AjustesRoute
  '/memoria': typeof MemoriaRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/chats/$chatId': typeof ChatsChatIdRoute
  '/chats': typeof ChatsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/agenda': typeof AgendaRoute
  '/ajustes': typeof AjustesRoute
  '/memoria': typeof MemoriaRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/chats/$chatId': typeof ChatsChatIdRoute
  '/chats/': typeof ChatsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/agenda'
    | '/ajustes'
    | '/memoria'
    | '/sign-in'
    | '/sign-up'
    | '/chats/$chatId'
    | '/chats'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/agenda'
    | '/ajustes'
    | '/memoria'
    | '/sign-in'
    | '/sign-up'
    | '/chats/$chatId'
    | '/chats'
  id:
    | '__root__'
    | '/'
    | '/agenda'
    | '/ajustes'
    | '/memoria'
    | '/sign-in'
    | '/sign-up'
    | '/chats/$chatId'
    | '/chats/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgendaRoute: typeof AgendaRoute
  AjustesRoute: typeof AjustesRoute
  MemoriaRoute: typeof MemoriaRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  ChatsChatIdRoute: typeof ChatsChatIdRoute
  ChatsIndexRoute: typeof ChatsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgendaRoute: AgendaRoute,
  AjustesRoute: AjustesRoute,
  MemoriaRoute: MemoriaRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  ChatsChatIdRoute: ChatsChatIdRoute,
  ChatsIndexRoute: ChatsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/agenda",
        "/ajustes",
        "/memoria",
        "/sign-in",
        "/sign-up",
        "/chats/$chatId",
        "/chats/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/agenda": {
      "filePath": "agenda.tsx"
    },
    "/ajustes": {
      "filePath": "ajustes.tsx"
    },
    "/memoria": {
      "filePath": "memoria.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/chats/$chatId": {
      "filePath": "chats/$chatId.tsx"
    },
    "/chats/": {
      "filePath": "chats/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
